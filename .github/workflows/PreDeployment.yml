name: Pre-Deployment Check

env: 
  ENV_FILE: ./POC/config.env 
    
on: 
  pull_request:
    types: [opened, edited, reopened]
    
  push:
    branches: [master, development]
    paths: 
      - ".github/workflows/PreDeployment.yml"
    
jobs:
  GetEnv:
    runs-on: ubuntu-latest
    outputs:
       ENVIRONMENT_NAME: ${{ steps.AppEnv.outputs.ENVIRONMENT_NAME }}
       SOURCE_PATH:: ${{ steps.AppEnv.outputs.SOURCE_PATH}}
       TEMPLATE_PATH:: ${{ steps.AppEnv.outputs.TEMPLATE_PATH}}
       MAIN_TEMPLATE_PATH:: ${{ steps.AppEnv.outputs.MAIN_TEMPLATE_PATH}}
       APP_NAME: ${{ steps.AppEnv.outputs.APP_NAME }}
       templates : ${{ steps.filter.outputs.templates }}
       src: ${{ steps.filter.outputs.src }}
       templates_files: ${{ steps.filter.outputs.templates_files }}
       src_files: ${{ steps.filter.outputs.src_files}}
       
    steps:
      - uses: actions/checkout@v2.3.3
      
      - name: SetEnvVars
        run: |
         while vars= read -r line; do
              echo "Text read from file: $line"
              echo  $line >> $GITHUB_ENV
          done < ${{env.ENV_FILE}}
          echo "ENVIRONMENT_NAME=dev" >> $GITHUB_ENV
          
      - name: Set Outputs
        id: AppEnv
        run: |
          echo 'ENVIRONMENT_NAME :' ${{env.ENVIRONMENT_NAME}} 
          echo 'ENV_FILE :' ${{env.ENV_FILE}}
          echo 'APP_NAME :' ${{env.APP_NAME}}
          echo "::set-output name=APP_NAME::${{env.APP_NAME}}"
          echo "::set-output name=ENVIRONMENT_NAME::${{env.ENVIRONMENT_NAME}}"
          echo "::set-output name=MAIN_TEMPLATE_PATH::${{env.MAIN_TEMPLATE_PATH}}"
          echo "::set-output name=TEMPLATE_PATH::${{env.TEMPLATE_PATH}}"
          echo "::set-output name=SOURCE_PATH::${{env.SOURCE_PATH}}"
        
      - uses: dorny/paths-filter@v2
        id: filter  
        with:
            list-files: json
            filters: |
              templates:
                - ${{env.TEMPLATE_PATH}}
              src:
                - ${{env.SOURCE_PATH}}
        
      - name: Changed template files
        shell: bash
        run: |
            echo ${{ steps.filter.output.templates_files }}

      - name: Changed src files
        shell: bash
        run: |
            echo ${{ steps.filter.outputs.src_files }}
  
  CheckEnv:
    needs: GetEnv
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.3.3

      - name: PrintEnvVars
        id: AppEnv
        run: |
         echo ${{ needs.GetEnv.outputs.APP_NAME}}
         echo ${{ needs.GetEnv.outputs.ENVIRONMENT_NAME}}
         echo ${{ needs.GetEnv.outputs.TEMPLATE_PATH}}
         echo ${{ needs.GetEnv.outputs.SOURCE_PATH}}
         echo ${{ needs.GetEnv.outputs.MAIN_TEMPLATE_PATH}}

#  # JOB to run codeql scan for code analysis
  codeql-analysis:
    name: codeql-analysis
    needs: GetEnv
    # Run code-analysis job only if changes are there in src path
    if: ${{ needs.GetEnv.outputs.src == 'true' }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        language: [csharp]
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2.3.3
      with:
        fetch-depth: 2
    - run: git checkout HEAD^2
      if: ${{ github.event_name == 'pull_request' }}
              
    # Initializes the CodeQL tools for scanning.
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v1
      with:
        languages: ${{ matrix.language }}

    - name: Autobuild
      uses: github/codeql-action/autobuild@v1

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v1
      
#  # JOB to run ARM Test Toolkit for arm templates
  test-arm-template:
    needs: GetEnv
    # Run test-arm-template job only if changes are there in templates path
    if: ${{ needs.GetEnv.outputs.templates == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v2.3.3
        
      - name: Run Test ARM Templates
        id: pathtest
        
        uses: aliencube/arm-ttk-actions@v0.3
        with:
          path: ${{ needs.GetEnv.outputs.MAIN_TEMPLATE_PATH}}
          files: mainTemplate.json
          
      - name: Test ARM Results
        shell: bash
        continue-on-error: false
        run: |
          echo ${{steps.pathtest.outputs.results}}
